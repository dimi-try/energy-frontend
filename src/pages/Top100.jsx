import React, { useState, useEffect, useRef } from "react"; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º React –∏ —Ö—É–∫–∏
import { useNavigate } from "react-router-dom"; // –•—É–∫ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏
import { motion } from "framer-motion"; // –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–π
import axios from "axios"; // HTTP-–∫–ª–∏–µ–Ω—Ç –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤
import "./Top100.css"; // –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ñ–∞–π–ª —Å—Ç–∏–ª–µ–π

const API_URL = process.env.REACT_APP_API_URL; // –ë–µ—Ä–µ–º URL API –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è

const Top100 = () => {
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–∏–ø–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞ (—ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∏ –∏–ª–∏ –±—Ä–µ–Ω–¥—ã)
  const [topType, setTopType] = useState(localStorage.getItem("topType") || "energies");
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–æ–≤ –∏ –±—Ä–µ–Ω–¥–æ–≤ (–∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –∏–∑ localStorage –∏–ª–∏ –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤)
  const [energies, setEnergies] = useState(JSON.parse(localStorage.getItem("energies")) || []);
  const [brands, setBrands] = useState(JSON.parse(localStorage.getItem("brands")) || []);
  
  const [loading, setLoading] = useState(false); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
  const [error, setError] = useState(null); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ—à–∏–±–∫–∏

  const listRef = useRef(null); // –†–µ—Ñ –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å–ø–∏—Å–∫–∞
  const navigate = useNavigate(); // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏

  // useEffect –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ —Å–º–µ–Ω–µ —Ç–∏–ø–∞ —Ç–æ–ø–∞
  useEffect(() => {
    setLoading(true); // –í–∫–ª—é—á–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    setError(null); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É

    // –î–µ–ª–∞–µ–º GET-–∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    axios.get(`${API_URL}/top/${topType}`)
      .then((res) => {
        if (topType === "energies") {
          setEnergies(res.data || []); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–æ–≤
          localStorage.setItem("energies", JSON.stringify(res.data)); // –ö—ç—à–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
        } else {
          setBrands(res.data || []); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –±—Ä–µ–Ω–¥–æ–≤
          localStorage.setItem("brands", JSON.stringify(res.data)); // –ö—ç—à–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
        }
      })
      .catch((err) => setError(err.message)) // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
      .finally(() => setLoading(false)); // –í—ã–∫–ª—é—á–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏

    localStorage.setItem("topType", topType); // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ç–∏–ø —Ç–æ–ø–∞
  }, [topType]); // –≠—Ñ—Ñ–µ–∫—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ topType

  // useEffect –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏ —Å–∫—Ä–æ–ª–ª–∞ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞
  useEffect(() => {
    const scrollPos = sessionStorage.getItem(`scrollPosition-${topType}`);
    if (listRef.current && scrollPos) {
      listRef.current.scrollTo(0, parseInt(scrollPos, 10)); // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∫—Ä–æ–ª–ª
    }
  }, [topType]);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –¥—Ä—É–≥—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ø–æ–∑–∏—Ü–∏–∏ —Å–∫—Ä–æ–ª–ª–∞
  const handleNavigate = (path) => {
    sessionStorage.setItem(`scrollPosition-${topType}`, listRef.current.scrollTop); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–∑–∏—Ü–∏—é —Å–∫—Ä–æ–ª–ª–∞
    navigate(path); // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
  };

  return (
    <div className="top100-container">
      {/* –ö–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–∏–ø–∞ —Ç–æ–ø–∞ */}
      <div className="toggle-buttons">
        <button 
          className={topType === "energies" ? "active" : ""} 
          onClick={() => setTopType("energies")}
        >
          üîã –¢–æ–ø —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–æ–≤
        </button>
        <button 
          className={topType === "brands" ? "active" : ""} 
          onClick={() => setTopType("brands")}
        >
          üè¢ –¢–æ–ø –±—Ä–µ–Ω–¥–æ–≤
        </button>
      </div>

      {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–ª–∏ –æ—à–∏–±–∫–∏ */}
      {loading && <p className="loading">‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞...</p>}
      {error && <p className="error">‚ùå –û—à–∏–±–∫–∞: {error}</p>}

      {/* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–ø–∏—Å–∫–∞ */}
      <div className="list-container" ref={listRef}>
        {!loading && !error && (
          <motion.div
            initial={{ opacity: 0 }} // –ù–∞—á–∞–ª—å–Ω–∞—è –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å
            animate={{ opacity: 1 }} // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
            transition={{ duration: 0.5 }} // –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏
            className="cards"
          >
            {/* –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–æ–≤ –∏–ª–∏ –±—Ä–µ–Ω–¥–æ–≤ */}
            {topType === "energies"
              ? energies.map((item, index) => (
                  <motion.div
                    key={item.id}
                    className="card"
                    initial={{ opacity: 0, y: 10 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ delay: index * 0.05 }}
                    whileHover={{ scale: 1.03 }}
                    whileTap={{ scale: 0.97 }}
                    onClick={() => handleNavigate(`/energy/${item.id}`)}
                  >
                    <div className="rank">#{index + 1}</div>
                    <h3>{item.brand?.name || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –±—Ä–µ–Ω–¥"}</h3>
                    <p>{item.name || "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è"}</p>
                    <div className="rating">
                      ‚≠ê {item.average_rating || "N/A"} ({item.review_count || 0} –æ—Ü–µ–Ω–æ–∫)
                    </div>
                    <p>{item.category.name || "–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"}</p>
                  </motion.div>
                ))
              : brands.map((item, index) => (
                  <motion.div
                    key={item.id}
                    className="card"
                    initial={{ opacity: 0, y: 10 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ delay: index * 0.05 }}
                    whileHover={{ scale: 1.03 }}
                    whileTap={{ scale: 0.97 }}
                    onClick={() => handleNavigate(`/brand/${item.id}`)}
                  >
                    <div className="rank">#{index + 1}</div>
                    <h3>{item.name || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –±—Ä–µ–Ω–¥"}</h3>
                    <div className="rating">‚≠ê {item.average_rating || "N/A"}</div>
                    <p>üì¶ –≠–Ω–µ—Ä–≥–µ—Ç–∏–∫–æ–≤ –≤—Å–µ–≥–æ: {item.energy_count || 0}</p>
                    <p>üë• –û—Ç–∑—ã–≤–æ–≤ –≤—Å–µ–≥–æ: {item.review_count || 0}</p>
                  </motion.div>
                ))}
          </motion.div>
        )}
      </div>
    </div>
  );
};

export default Top100;
