import React, { useState, useEffect, useRef } from "react"; // –ò–º–ø–æ—Ä—Ç React –∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ö—É–∫–æ–≤
import { useParams } from "react-router-dom"; // –•—É–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ URL
import { motion } from "framer-motion"; // –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–π
import axios from "axios"; // HTTP-–∫–ª–∏–µ–Ω—Ç
import "./EnergyDrinkPage.css"; // –°—Ç–∏–ª–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞

const API_URL = process.env.REACT_APP_API_URL; // –ë–∞–∑–æ–≤—ã–π URL API –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è

const EnergyDrinkPage = () => {
  // –ü–æ–ª—É—á–∞–µ–º ID —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞ –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ URL
  const { id } = useParams();

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ–± —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–µ
  const [energy, setEnergy] = useState(null);
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –æ—Ç–∑—ã–≤–æ–≤
  const [reviews, setReviews] = useState([]);
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ –æ—Ü–µ–Ω–∫–∏
  const [criteria, setCriteria] = useState([]);
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –Ω–æ–≤–æ–π —Ñ–æ—Ä–º—ã –æ—Ç–∑—ã–≤–∞
  const [newReview, setNewReview] = useState({
    user_id: "", // ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    review_text: "", // –¢–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞
    ratings: {} // –û—Ü–µ–Ω–∫–∏ –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º {criteriaId: value}
  });

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
  const [loading, setLoading] = useState(true);
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
  const [error, setError] = useState(null);
  
  // –†–µ—Ñ–µ—Ä–µ–Ω—Å –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –æ—Ç–∑—ã–≤–æ–≤
  const listRef = useRef(null);

  // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    setLoading(true); // –í–∫–ª—é—á–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
    setError(null); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏

    // –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    const fetchData = async () => {
      try {
        // –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å API
        const [energyRes, reviewsRes, criteriaRes] = await Promise.all([
          axios.get(`${API_URL}/energy/${id}`), // –î–∞–Ω–Ω—ã–µ —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞
          axios.get(`${API_URL}/energy/${id}/reviews/`), // –°–ø–∏—Å–æ–∫ –æ—Ç–∑—ã–≤–æ–≤
          axios.get(`${API_URL}/criteria/`) // –ö—Ä–∏—Ç–µ—Ä–∏–∏ –æ—Ü–µ–Ω–∫–∏
        ]);

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π —Å –ø–æ–ª—É—á–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        setEnergy(energyRes.data);
        setReviews(reviewsRes.data);
        setCriteria(criteriaRes.data);

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ—Ü–µ–Ω–æ–∫ –¥–ª—è —Ñ–æ—Ä–º—ã
        const initialRatings = criteriaRes.data.reduce((acc, curr) => {
          acc[curr.id] = ""; // –ü—É—Å—Ç—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫—Ä–∏—Ç–µ—Ä–∏—è
          return acc;
        }, {});
        
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ñ–æ—Ä–º—ã
        setNewReview(prev => ({
          ...prev,
          ratings: initialRatings
        }));
      } catch (err) {
        setError(err.message); // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
      } finally {
        setLoading(false); // –í—ã–∫–ª—é—á–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
      }
    };

    fetchData(); // –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏
  }, [id]); // –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç ID —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞

  // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏ —Å–∫—Ä–æ–ª–ª–∞
  useEffect(() => {
    const scrollPos = sessionStorage.getItem(`scrollPosition-energy-${id}`);
    if (listRef.current && scrollPos) {
      listRef.current.scrollTo(0, parseInt(scrollPos, 10)); // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏
    }
  }, [id]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∫—Ä–æ–ª–ª–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏
  const handleScroll = () => {
    sessionStorage.setItem(`scrollPosition-energy-${id}`, listRef.current.scrollTop);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã
  const handleChange = (e, criteriaId) => {
    const value = e.target.value;
    
    if (criteriaId) {
      // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ü–µ–Ω–æ–∫ –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º
      setNewReview(prev => ({
        ...prev,
        ratings: {
          ...prev.ratings,
          [criteriaId]: value
        }
      }));
    } else {
      // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã
      setNewReview(prev => ({
        ...prev,
        [e.target.name]: value
      }));
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
  const handleSubmit = async (e) => {
    e.preventDefault(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ
    setError(null); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏
    
    try {
      // –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –æ—Ü–µ–Ω–æ–∫ –≤ –Ω—É–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
      const ratings = Object.entries(newReview.ratings).map(([criteriaId, ratingValue]) => {
        const numericValue = parseFloat(ratingValue); // –ü–∞—Ä—Å–∏–º —á–∏—Å–ª–æ
        
        // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
        if (isNaN(numericValue) || numericValue < 0 || numericValue > 10) {
          throw new Error("–û—Ü–µ–Ω–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º –æ—Ç 0 –¥–æ 10");
        }

        // –§–æ—Ä–º–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç –æ—Ü–µ–Ω–∫–∏ –¥–ª—è API
        return {
          criteria_id: parseInt(criteriaId), // ID –∫—Ä–∏—Ç–µ—Ä–∏—è
          rating_value: numericValue // –ó–Ω–∞—á–µ–Ω–∏–µ –æ—Ü–µ–Ω–∫–∏
        };
      });

      // –û—Ç–ø—Ä–∞–≤–∫–∞ POST-–∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–∑—ã–≤–∞
      const response = await axios.post(`${API_URL}/review/`, {
        user_id: newReview.user_id, // ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        review_text: newReview.review_text, // –¢–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞
        energy_id: parseInt(id), // ID —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞
        ratings // –ú–∞—Å—Å–∏–≤ –æ—Ü–µ–Ω–æ–∫
      });

      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –æ—Ç–∑—ã–≤–æ–≤
      setReviews([...reviews, response.data]);
      
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
      setNewReview(prev => ({
        user_id: "",
        review_text: "",
        ratings: criteria.reduce((acc, curr) => ({
          ...acc,
          [curr.id]: ""
        }), {})
      }));

    } catch (err) {
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞
      const errorData = err.response?.data;
      let errorMessage = "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–∑—ã–≤–∞";
      
      if (errorData) {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ –æ—à–∏–±–æ–∫
        if (Array.isArray(errorData.detail)) {
          errorMessage = errorData.detail.map(e => e.msg).join(", ");
        } else if (typeof errorData.detail === "string") {
          errorMessage = errorData.detail;
        }
      }
      
      setError(errorMessage); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
    }
  };

  // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
  if (loading) return <p className="loading">‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞...</p>;
  
  // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–æ–∫
  if (error) return <p className="error">‚ùå –û—à–∏–±–∫–∞: {error}</p>;
  
  // –ï—Å–ª–∏ —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω
  if (!energy) return <p className="not-found">‚ö†Ô∏è –≠–Ω–µ—Ä–≥–µ—Ç–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω</p>;

  // –†–µ–Ω–¥–µ—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  return (
    <div className="energy-container">
      {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <motion.h1 
        initial={{ opacity: 0 }} 
        animate={{ opacity: 1 }} 
        transition={{ duration: 0.5 }}
      >
        {energy.brand?.name} {energy.name} 
      </motion.h1>

      {/* –ë–ª–æ–∫ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–µ */}
      <div className="energy-info">
        <p><strong>‚≠ê –°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞:</strong> {energy.average_rating || "N/A"}</p>
        <p><strong>üìù –û–ø–∏—Å–∞–Ω–∏–µ:</strong> {energy.description}</p>
        <p><strong>üì¶ –ö–∞—Ç–µ–≥–æ—Ä–∏—è:</strong> {energy.category?.name}</p>
      </div>

      {/* –§–æ—Ä–º–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–∑—ã–≤–∞ */}
      <motion.div 
        initial={{ y: 20 }} 
        animate={{ y: 0 }} 
        className="review-form"
      >
        <h2>‚úçÔ∏è –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤</h2>
        <form onSubmit={handleSubmit}>
          {/* –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ User ID */}
          <input
            type="number"
            name="user_id"
            placeholder="–í–∞—à User ID"
            value={newReview.user_id}
            onChange={handleChange}
            required
            min="1"
          />

          {/* –¢–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ –¥–ª—è –æ—Ç–∑—ã–≤–∞ */}
          <textarea
            name="review_text"
            placeholder="–¢–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞"
            value={newReview.review_text}
            onChange={handleChange}
            required
          />

          {/* –ë–ª–æ–∫ —Å –∫—Ä–∏—Ç–µ—Ä–∏—è–º–∏ –æ—Ü–µ–Ω–∫–∏ */}
          <div className="ratings-form">
            {criteria.map(criterion => (
              <div key={criterion.id} className="rating-input">
                <label>
                  {criterion.name} (0-10):
                  <input
                    type="number"
                    min="0"
                    max="10"
                    step="0.1"
                    value={newReview.ratings[criterion.id] || ""}
                    onChange={(e) => handleChange(e, criterion.id)}
                    required
                  />
                </label>
              </div>
            ))}
          </div>

          {/* –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã */}
          <button type="submit" className="submit-btn">
            üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤
          </button>
        </form>
      </motion.div>

      {/* –°–µ–∫—Ü–∏—è —Å–æ —Å–ø–∏—Å–∫–æ–º –æ—Ç–∑—ã–≤–æ–≤ */}
      <h2>üìú –û—Ç–∑—ã–≤—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</h2>
      <div 
        className="list-container" 
        ref={listRef} 
        onScroll={handleScroll}
      >
        {reviews.length > 0 ? (
          <motion.div 
            initial={{ opacity: 0 }} 
            animate={{ opacity: 1 }} 
            className="reviews-list"
          >
            {reviews.map(review => (
              <motion.div
                key={review.id}
                className="review-card"
                whileHover={{ scale: 1.02 }}
                transition={{ duration: 0.2 }}
              >
                {/* –®–∞–ø–∫–∞ –æ—Ç–∑—ã–≤–∞ */}
                <div className="review-header">
                  <span className="user-id">üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å #{review.user_id}</span>
                  <span className="review-date">
                    üìÖ {new Date(review.created_at).toLocaleDateString()}
                  </span>
                </div>
                
                {/* –¢–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞ */}
                <p className="review-text">{review.review_text}</p>
                
                {/* –°–ø–∏—Å–æ–∫ –æ—Ü–µ–Ω–æ–∫ */}
                <div className="ratings-list">
                  {review.ratings?.map(rating => (
                    <div key={rating.id} className="rating-item">
                      <span className="rating-category">
                        {criteria.find(c => c.id === rating.criteria_id)?.name}:
                      </span>
                      <span className="rating-value">{rating.rating_value}/10</span>
                    </div>
                  ))}
                </div>
              </motion.div>
            ))}
          </motion.div>
        ) : (
          <p className="no-reviews">üòû –ü–æ–∫–∞ –Ω–µ—Ç –æ—Ç–∑—ã–≤–æ–≤. –ë—É–¥—å—Ç–µ –ø–µ—Ä–≤—ã–º!</p>
        )}
      </div>
    </div>
  );
};

export default EnergyDrinkPage;